@import url('https://fonts.googleapis.com/css?family=Montserrat:600,600i|Roboto');
:root {
    --primary-color: #3b2019; 
    --secondary-color: #fac27f; 
	--terciary-color: #f25481; 
	--fourth-color: #61412e; 
	font-family: 'Montserrat', sans-serif;
	font-family: 'Roboto', sans-serif;
}
*, *:before, *:after {
	box-sizing: border-box;
}
body,html{
	margin:0;
	padding:0; 
	overflow-y: hidden;
}
.main-header{
	box-sizing: border-box;
	position: absolute;
	width: 100%;
	padding: 0;
	left: 0;
	z-index: 10;
	background: repeating-linear-gradient(
		90deg,
		var(--primary-color) 10px,
		var(--primary-color) 11.4px,
		var(--fourth-color) 13px,
		var(--fourth-color) 12px
		);
	background-color: var(--primary-color);
	box-shadow: 0px -7px 10px 10px var(--secondary-color);
}
.main-header > .nav-toggle{
	position: absolute;
    top: 30px;
    left: 5%;

}
.main-header > .nav-toggle div{
    width: 35px;
    height: 5px;
    background-color: var(--secondary-color);
    margin: 6px 0;
}
.top-stripe{
	top: 0;
	width: 100%;
	height:10px;
	background-color: var(--terciary-color);
	background-image: radial-gradient(black 15%, transparent 30%),
	radial-gradient(black 15%, transparent 30%);
	background-size:10px 20px;
	background-position: 0 17px, 55px 32px;
	z-index: 444;
}
.website-title{
	text-align: center;
	color: var(--secondary-color);
	text-shadow: 
		1px 0px 0px var(--terciary-color), 
		1px 1px 0px var(--terciary-color),
		1px 1px 1px var(--terciary-color);
}

.parallax-wrapper {
	/* The height needs to be set to a fixed value for the effect to work.
	* 100vh is the full height of the viewport. */
	height: 100vh;
	/* The scaling of the images would add a horizontal scrollbar, so disable x overflow. */
	overflow-x: hidden;
	/* Enable scrolling on the page. */
	overflow-y: auto;
	/* Set the perspective to 2px. This is essentailly the simulated distance from the viewport to transformed objects.*/
	perspective: 2px;
}
.main-nav{
	position: fixed;
	color:white;
	background-color: black;
	top: 0;
	left: 0;
	height: 100vh;
	width: 100%;
	overflow: hidden;
	font-size: 7vw;
	display: grid;
	grid-template-rows: repeat(7, 1fr);
	justify-items: center;
	z-index: 5;
	transform: translate(-100%);
	transition: transform 0.5s ease;
}
.main-nav.open{
	transform: translate(0);
}
.main-nav .nav-toggle{
	position: absolute;
	top: 5%;
    right: 5%;
}
.main-nav > div {
	margin: 1.5em 1em;
	z-index: 3;
}
.main-nav > div > a{
	background: none;
	border: none;
	outline: none;
	color: beige;
	max-height: 40px;
}
.main-nav > .logo-container-outer > img {
	position: absolute;
	margin-left: auto;
	margin-right: auto;
	top: 1em;
	left: 0;
	right: 0;
	display: block;
	z-index: -1;
}
.section {
	/* Needed for children to be absolutely positioned relative to the parent. */
	position: relative;
	/* The height of the container. Must be set, but it doesn't really matter what the value is. */
	height: 100vh;

	/* For text formatting. */
	display: flex;
	align-items: center;
	justify-content: center;
	color: white;
	text-shadow: 0 0 5px #000;
}
.parallax::after {
	/* Display and position the pseudo-element */
	content: " ";
	position: absolute;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	/* Move the pseudo-element back away from the camera,
	* then scale it back up to fill the viewport.
	* Because the pseudo-element is further away, it appears to move more slowly, like in real life. */
	transform: translateZ(-1px) scale(1.5);
	/* Force the background image to fill the whole element. */
	background-size: 100%;
	/* Keep the image from overlapping sibling elements. */ 
	z-index: -1;
}
/* The styling for the static div. */
.static {
  background: beige;
  height: 50vh !important;
}
/* Sets the actual background images to adorable kitties. This part is crucial. */
.bg1::after {
    left: -1%;
    background: url('https://picsum.photos/1920/1080?image=1084') no-repeat center;
    background-size: cover;
}

.bg2::after {
  	left: -1%;
    background: url('https://picsum.photos/1920/1080?image=1079') no-repeat center;
    background: cover;
}
.footer{
	background-color: black;
}